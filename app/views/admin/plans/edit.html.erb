<div class="mb-8">
  <h1 class="text-3xl font-bold text-gray-900">Editar Plano</h1>
  <p class="mt-2 text-gray-600">Edite as informações do plano de assinatura</p>
</div>

<div class="max-w-2xl">
  <%= form_with model: [:admin, @plan], local: true, class: "space-y-6" do |form| %>
    
    <% if @plan.errors.any? %>
      <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
        <h4 class="font-medium">Corrija os seguintes erros:</h4>
        <ul class="mt-2 list-disc list-inside">
          <% @plan.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div>
      <%= form.label :name, "Nome do Plano", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.text_field :name, class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent" %>
    </div>

    <div>
      <%= form.label :description, "Descrição", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.text_area :description, rows: 3, class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none" %>
    </div>

    <div>
      <%= form.label :price_cents, "Preço", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <span class="text-gray-500 text-sm font-medium">R$</span>
        </div>
        <%= form.text_field :price_cents, value: (@plan.price_cents.present? ? '%.2f' % (@plan.price_cents / 100.0) : '').gsub('.', ','), 
                            class: "w-full pl-12 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent", 
                            data: { mask: 'currency' }, 
                            placeholder: "0,00" %>
      </div>
      <p class="mt-2 text-sm text-gray-500">Digite o valor em reais (ex: 59,90)</p>
    </div>

    <div>
      <%= form.label :max_links, "Máximo de Links", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.number_field :max_links, class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent" %>
      <p class="mt-2 text-sm text-gray-500">Use -1 para ilimitado</p>
    </div>

    <div>
      <%= form.label :features, "Recursos", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.text_area :features, value: @plan.features.is_a?(Array) ? @plan.features.join("\n") : @plan.features, 
                         rows: 5, class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none" %>
      <p class="mt-2 text-sm text-gray-500">
        Digite um recurso por linha
      </p>
    </div>

    <div class="border-t border-gray-200 pt-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Configurações</h3>
      
      <div class="space-y-4">
        <div class="flex items-center space-x-3">
          <%= form.check_box :popular, class: "h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded" %>
          <%= form.label :popular, "Plano Popular", class: "text-sm font-medium text-gray-900" %>
        </div>

        <div class="flex items-center space-x-3">
          <%= form.check_box :active, class: "h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded" %>
          <%= form.label :active, "Plano Ativo", class: "text-sm font-medium text-gray-900" %>
        </div>
      </div>
    </div>

    <div class="border-t border-gray-200 pt-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Configurações Stripe</h3>
      
      <div>
        <%= form.label :stripe_price_id, "Stripe Price ID", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.text_field :stripe_price_id, class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent" %>
        <p class="mt-2 text-sm text-gray-500">ID do preço no Stripe. Cuidado ao alterar!</p>
      </div>
    </div>

    <div class="flex justify-end space-x-3 pt-4">
      <%= link_to "Cancelar", admin_plan_path(@plan), 
          class: "px-6 py-3 border border-gray-200 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors" %>
      <%= form.submit "Atualizar Plano", 
          class: "px-6 py-3 border border-transparent bg-indigo-600 text-white rounded-lg font-medium hover:bg-indigo-700 transition-colors" %>
    </div>
  <% end %>
</div>

<div class="mt-8 pt-6 border-t border-gray-200">
  <div class="flex justify-between items-center">
    <div>
      <h3 class="text-lg font-medium text-gray-900">Ações Avançadas</h3>
      <p class="text-sm text-gray-500">Ações que podem afetar assinantes ativos</p>
    </div>
    <div class="space-x-3">
      <%= link_to "Sincronizar com Stripe", "#", 
          class: "px-4 py-2 border border-blue-200 bg-blue-50 text-blue-700 rounded-lg font-medium hover:bg-blue-100 transition-colors",
          data: { confirm: "Isso irá sincronizar este plano com o Stripe. Continuar?" } %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const priceInput = document.querySelector('[data-mask="currency"]');
  
  if (priceInput) {
    // Função para formatar como moeda brasileira
    function formatCurrency(value) {
      // Remove tudo que não é dígito
      value = value.replace(/\D/g, '');
      
      // Converte para centavos
      value = (value / 100).toFixed(2);
      
      // Formata como moeda brasileira
      value = value.replace('.', ',');
      value = value.replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1.');
      
      return value;
    }
    
    // Função para converter de volta para centavos
    function toCents(value) {
      value = value.replace(/\./g, ''); // Remove pontos de milhares
      value = value.replace(',', '.'); // Troca vírgula por ponto
      return Math.round(parseFloat(value || 0) * 100);
    }
    
    priceInput.addEventListener('input', function(e) {
      const formatted = formatCurrency(e.target.value);
      e.target.value = formatted;
    });
    
    // Antes de submeter o form, converte para centavos
    const form = priceInput.closest('form');
    if (form) {
      form.addEventListener('submit', function(e) {
        const cents = toCents(priceInput.value);
        priceInput.name = 'plan[price_cents]';
        priceInput.value = cents;
      });
    }
  }
});
</script>
